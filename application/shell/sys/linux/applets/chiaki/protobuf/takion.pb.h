/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_TKPROTO_TAKION_PB_H_INCLUDED
#define PB_TKPROTO_TAKION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _tkproto_TakionMessage_PayloadType { 
    tkproto_TakionMessage_PayloadType_BIG = 0, 
    tkproto_TakionMessage_PayloadType_BANG = 1, 
    tkproto_TakionMessage_PayloadType_INFO = 2, 
    tkproto_TakionMessage_PayloadType_HEARTBEAT = 3, 
    tkproto_TakionMessage_PayloadType_PACKETLOSS = 4, 
    tkproto_TakionMessage_PayloadType_CORRUPTFRAME = 5, 
    tkproto_TakionMessage_PayloadType_CURSOR = 6, 
    tkproto_TakionMessage_PayloadType_TIMER = 7, 
    tkproto_TakionMessage_PayloadType_DISCONNECT = 8, 
    tkproto_TakionMessage_PayloadType_LOG = 9, 
    tkproto_TakionMessage_PayloadType_HEADERREQUEST = 10, 
    tkproto_TakionMessage_PayloadType_DEBUG = 11, 
    tkproto_TakionMessage_PayloadType_SENKUSHA = 12, 
    tkproto_TakionMessage_PayloadType_STREAMINFO = 13, 
    tkproto_TakionMessage_PayloadType_STREAMINFOACK = 14, 
    tkproto_TakionMessage_PayloadType_XMBCOMMAND = 15, 
    tkproto_TakionMessage_PayloadType_CONNECTIONQUALITY = 16, 
    tkproto_TakionMessage_PayloadType_CLIENTMETRIC = 17, 
    tkproto_TakionMessage_PayloadType_PLAYTIMELEFT = 18, 
    tkproto_TakionMessage_PayloadType_SERVERMESSAGE = 19, 
    tkproto_TakionMessage_PayloadType_FPSCHANGE = 20, 
    tkproto_TakionMessage_PayloadType_CONTROLLERCONNECTION = 21, 
    tkproto_TakionMessage_PayloadType_CLIENTINFO = 22, 
    tkproto_TakionMessage_PayloadType_VIDEOCAPTURE = 23, 
    tkproto_TakionMessage_PayloadType_AUDIOCAPTURE = 24, 
    tkproto_TakionMessage_PayloadType_IDRREQUEST = 25, 
    tkproto_TakionMessage_PayloadType_GKTRACE = 26, 
    tkproto_TakionMessage_PayloadType_PERIODICTIMESTAMP = 27, 
    tkproto_TakionMessage_PayloadType_SERVERSETTINGS = 28, 
    tkproto_TakionMessage_PayloadType_DIRECTMESSAGE = 29, 
    tkproto_TakionMessage_PayloadType_MICCONNECTION = 30, 
    tkproto_TakionMessage_PayloadType_TAKIONPROTOCOLREQUEST = 31, 
    tkproto_TakionMessage_PayloadType_TAKIONPROTOCOLREQUESTACK = 32 
} tkproto_TakionMessage_PayloadType;

typedef enum _tkproto_LogMessage_LogLevel { 
    tkproto_LogMessage_LogLevel_CRITICAL = 0, 
    tkproto_LogMessage_LogLevel_ERROR = 1, 
    tkproto_LogMessage_LogLevel_WARNING = 2, 
    tkproto_LogMessage_LogLevel_INFO = 3, 
    tkproto_LogMessage_LogLevel_DEBUG = 4, 
    tkproto_LogMessage_LogLevel_TRACE = 5 
} tkproto_LogMessage_LogLevel;

typedef enum _tkproto_ClientMetric_Category { 
    tkproto_ClientMetric_Category_VIDEO_FRAMELIFETIME = 0, 
    tkproto_ClientMetric_Category_VIDEO_FRAMENALUSCOMPLETE = 1, 
    tkproto_ClientMetric_Category_VIDEO_FECCORRECTION = 2, 
    tkproto_ClientMetric_Category_VIDEO_FRAMEQUEUE = 3, 
    tkproto_ClientMetric_Category_VIDEO_DECODERFRAMEQUEUE = 4, 
    tkproto_ClientMetric_Category_VIDEO_SUBMITTODECODER = 5, 
    tkproto_ClientMetric_Category_VIDEO_DECODE = 6, 
    tkproto_ClientMetric_Category_VIDEO_DECODEDPICTUREDROP = 7, 
    tkproto_ClientMetric_Category_VIDEO_YUVCOPY = 8, 
    tkproto_ClientMetric_Category_VIDEO_TEXTURECOPY = 9, 
    tkproto_ClientMetric_Category_VIDEO_RENDER = 10, 
    tkproto_ClientMetric_Category_GRAPHICS_PRERENDER = 11, 
    tkproto_ClientMetric_Category_GRAPHICS_PRESENT = 12, 
    tkproto_ClientMetric_Category_AUDIO_FRAMELIFETIME = 13, 
    tkproto_ClientMetric_Category_AUDIO_FRAMENALUSCOMPLETE = 14, 
    tkproto_ClientMetric_Category_AUDIO_FECCORRECTION = 15, 
    tkproto_ClientMetric_Category_AUDIO_FRAMEQUEUE = 16, 
    tkproto_ClientMetric_Category_AUDIO_SUBMITTODECODER = 17, 
    tkproto_ClientMetric_Category_AUDIO_DECODE = 18, 
    tkproto_ClientMetric_Category_AUDIO_BUFFERCOPY = 19, 
    tkproto_ClientMetric_Category_AUDIO_RENDER = 20 
} tkproto_ClientMetric_Category;

typedef enum _tkproto_HeaderRequestPayload_HeaderType { 
    tkproto_HeaderRequestPayload_HeaderType_AUDIO = 0, 
    tkproto_HeaderRequestPayload_HeaderType_VIDEO = 1 
} tkproto_HeaderRequestPayload_HeaderType;

typedef enum _tkproto_DebugOption_Type { 
    tkproto_DebugOption_Type_OVERLAY = 0, 
    tkproto_DebugOption_Type_BITRATE = 1 
} tkproto_DebugOption_Type;

typedef enum _tkproto_OverlayPayload_LogLocation { 
    tkproto_OverlayPayload_LogLocation_TOP_LEFT = 0, 
    tkproto_OverlayPayload_LogLocation_TOP_RIGHT = 1, 
    tkproto_OverlayPayload_LogLocation_BOTTOM_LEFT = 2, 
    tkproto_OverlayPayload_LogLocation_BOTTOM_RIGHT = 3 
} tkproto_OverlayPayload_LogLocation;

typedef enum _tkproto_XmbCommandPayload_XmbCommand { 
    tkproto_XmbCommandPayload_XmbCommand_OFF = 0, 
    tkproto_XmbCommandPayload_XmbCommand_ON = 1, 
    tkproto_XmbCommandPayload_XmbCommand_TOGGLE = 2 
} tkproto_XmbCommandPayload_XmbCommand;

typedef enum _tkproto_ControllerConnectionPayload_ControllerType { 
    tkproto_ControllerConnectionPayload_ControllerType_NOTSET = 0, 
    tkproto_ControllerConnectionPayload_ControllerType_DUALSHOCK3 = 1, 
    tkproto_ControllerConnectionPayload_ControllerType_DUALSHOCK4 = 2, 
    tkproto_ControllerConnectionPayload_ControllerType_VITA = 3, 
    tkproto_ControllerConnectionPayload_ControllerType_XINPUT = 4, 
    tkproto_ControllerConnectionPayload_ControllerType_MOBILE = 5, 
    tkproto_ControllerConnectionPayload_ControllerType_DUALSENSE = 6, 
    tkproto_ControllerConnectionPayload_ControllerType_VR2SENSE = 7 
} tkproto_ControllerConnectionPayload_ControllerType;

typedef enum _tkproto_DeepLinkPayload_DeepLinkType { 
    tkproto_DeepLinkPayload_DeepLinkType_SAVE_DATA = 0, 
    tkproto_DeepLinkPayload_DeepLinkType_INVITE = 1, 
    tkproto_DeepLinkPayload_DeepLinkType_GAME_ALERT = 2, 
    tkproto_DeepLinkPayload_DeepLinkType_SYSTEM_SERVICE_STATUS = 3, 
    tkproto_DeepLinkPayload_DeepLinkType_DEBUG_VSH_MENU = 4, 
    tkproto_DeepLinkPayload_DeepLinkType_RAW = 5 
} tkproto_DeepLinkPayload_DeepLinkType;

typedef enum _tkproto_MicInfoPayload_MicInfoType { 
    tkproto_MicInfoPayload_MicInfoType_MIC_CONNECT = 0, 
    tkproto_MicInfoPayload_MicInfoType_MIC_MUTE = 1 
} tkproto_MicInfoPayload_MicInfoType;

typedef enum _tkproto_DirectMessagePayload_DirectMessageType { 
    tkproto_DirectMessagePayload_DirectMessageType_DEEPLINK = 0, 
    tkproto_DirectMessagePayload_DirectMessageType_MICINFO = 1 
} tkproto_DirectMessagePayload_DirectMessageType;

typedef enum _tkproto_DirectMessagePayload_Destination { 
    tkproto_DirectMessagePayload_Destination_GAIKAI_CONTROLLER = 1000, 
    tkproto_DirectMessagePayload_Destination_CLIENT = 1001 
} tkproto_DirectMessagePayload_Destination;

typedef enum _tkproto_SenkushaPayload_Command { 
    tkproto_SenkushaPayload_Command_ECHO_COMMAND = 0, 
    tkproto_SenkushaPayload_Command_MTU_COMMAND = 1, 
    tkproto_SenkushaPayload_Command_BANDWIDTH_COMMAND = 3, 
    tkproto_SenkushaPayload_Command_CLIENT_MTU_COMMAND = 4 
} tkproto_SenkushaPayload_Command;

/* Struct definitions */
typedef struct _tkproto_ClientMetricPayload { 
    pb_callback_t messages;
} tkproto_ClientMetricPayload;

typedef struct _tkproto_EventCode { 
    pb_callback_t event_code;
    pb_callback_t name;
    pb_callback_t description;
} tkproto_EventCode;

typedef struct _tkproto_LogPayload { 
    pb_callback_t messages;
} tkproto_LogPayload;

typedef struct _tkproto_ServerMessagePayload { 
    pb_callback_t payload;
} tkproto_ServerMessagePayload;

typedef struct _tkproto_TakionProtocolRequestPayload { 
    pb_callback_t supported_takion_versions;
} tkproto_TakionProtocolRequestPayload;

typedef struct _tkproto_AudioCapturePayload { 
    bool has_server_side;
    bool server_side;
} tkproto_AudioCapturePayload;

typedef struct _tkproto_AudioChannelPayload { 
    uint32_t audio_channel_type;
    pb_callback_t audio_header;
    bool has_is_raw_pcm;
    bool is_raw_pcm;
} tkproto_AudioChannelPayload;

typedef struct _tkproto_BangPayload { 
    uint32_t server_version;
    uint32_t token;
    bool encrypted_key_accepted;
    bool version_accepted;
    pb_callback_t session_key;
    bool has_extended_info;
    tkproto_EventCode extended_info;
    pb_callback_t server_version_string;
    pb_callback_t ecdh_pub_key;
    pb_callback_t ecdh_sig;
} tkproto_BangPayload;

typedef struct _tkproto_BigPayload { 
    uint32_t client_version;
    pb_callback_t session_key;
    pb_callback_t launch_spec;
    pb_callback_t encrypted_key;
    pb_callback_t ecdh_pub_key;
    pb_callback_t ecdh_sig;
} tkproto_BigPayload;

typedef struct _tkproto_BitratePayload { 
    bool has_toggle;
    bool toggle;
    bool has_bitrate_change;
    float bitrate_change;
} tkproto_BitratePayload;

typedef struct _tkproto_ClientInfoPayload { 
    pb_callback_t session_key;
    bool has_gcm_tag;
    uint32_t gcm_tag;
    bool has_key_pos;
    uint32_t key_pos;
} tkproto_ClientInfoPayload;

typedef struct _tkproto_ClientMetric { 
    tkproto_ClientMetric_Category category;
    int32_t start_frame;
    int32_t end_frame;
    int32_t count;
    float average;
    float std_dev;
    float min_val;
    float max_val;
} tkproto_ClientMetric;

typedef struct _tkproto_ConnectionQualityPayload { 
    bool has_target_bitrate;
    uint32_t target_bitrate;
    bool has_upstream_bitrate;
    uint32_t upstream_bitrate;
    bool has_upstream_loss;
    float upstream_loss;
    bool has_disable_upstream_audio;
    bool disable_upstream_audio;
    bool has_rtt;
    double rtt;
    bool has_loss;
    uint64_t loss;
} tkproto_ConnectionQualityPayload;

typedef struct _tkproto_ControllerConnectionPayload { 
    bool has_controller_id;
    int32_t controller_id;
    bool has_connected;
    bool connected;
    bool has_controller_type;
    tkproto_ControllerConnectionPayload_ControllerType controller_type;
} tkproto_ControllerConnectionPayload;

typedef struct _tkproto_CorruptFramePayload { 
    uint32_t start;
    uint32_t end;
} tkproto_CorruptFramePayload;

typedef struct _tkproto_CursorPayload { 
    uint32_t id;
    uint32_t width;
    uint32_t height;
    uint32_t hotspot_x;
    uint32_t hotspot_y;
    pb_callback_t pixels;
} tkproto_CursorPayload;

typedef struct _tkproto_DeepLinkPayload { 
    tkproto_DeepLinkPayload_DeepLinkType deep_link_type;
    bool has_request_id;
    uint32_t request_id;
    bool has_pad_unique_id;
    uint32_t pad_unique_id;
    pb_callback_t invitation_id;
    pb_callback_t session_id;
    pb_callback_t item_id;
    pb_callback_t is_system_ui_overlaid;
    bool has_result;
    uint32_t result;
    bool has_should_show;
    bool should_show;
    pb_callback_t raw_data;
} tkproto_DeepLinkPayload;

typedef struct _tkproto_DirectMessagePayload { 
    tkproto_DirectMessagePayload_DirectMessageType direct_message_type;
    tkproto_DirectMessagePayload_Destination destination;
    pb_callback_t data;
} tkproto_DirectMessagePayload;

typedef struct _tkproto_DisconnectPayload { 
    pb_callback_t reason;
    bool has_extended_info;
    tkproto_EventCode extended_info;
} tkproto_DisconnectPayload;

typedef struct _tkproto_FpsChangePayload { 
    uint32_t fps;
} tkproto_FpsChangePayload;

typedef struct _tkproto_GkTracePayload { 
    uint32_t seq_no;
    uint32_t gcm_tag;
    uint32_t key_pos;
} tkproto_GkTracePayload;

typedef struct _tkproto_HeaderRequestPayload { 
    tkproto_HeaderRequestPayload_HeaderType type;
} tkproto_HeaderRequestPayload;

typedef struct _tkproto_InfoPayload { 
    uint32_t effective_bw;
    uint32_t bitrate;
    uint32_t min_bitrate;
    uint32_t target_bitrate;
    uint32_t corrupt_frame_freq;
    uint32_t mtu;
    uint32_t fps;
    uint32_t monitor_interval;
    uint32_t ext_overhead;
    uint32_t int_overhead;
    uint32_t timeout_interval;
    uint32_t min_resume_quality;
    uint32_t min_fps;
} tkproto_InfoPayload;

typedef struct _tkproto_LogMessage { 
    int64_t timestamp;
    tkproto_LogMessage_LogLevel level;
    pb_callback_t component;
    pb_callback_t message;
    bool has_timestampdouble;
    double timestampdouble;
} tkproto_LogMessage;

typedef struct _tkproto_MicConnectionPayload { 
    int32_t controller_id;
    bool connected;
    bool has_result;
    bool result;
} tkproto_MicConnectionPayload;

typedef struct _tkproto_MicInfoPayload { 
    tkproto_MicInfoPayload_MicInfoType mic_info_type;
    bool has_controller_id;
    uint32_t controller_id;
    bool has_connected;
    bool connected;
    bool has_muted;
    bool muted;
    bool has_result;
    bool result;
} tkproto_MicInfoPayload;

typedef struct _tkproto_OverlayPayload { 
    bool has_enable;
    bool enable;
    bool has_toggle;
    bool toggle;
    bool has_location;
    tkproto_OverlayPayload_LogLocation location;
    bool has_level;
    uint32_t level;
} tkproto_OverlayPayload;

typedef struct _tkproto_PacketLossPayload { 
    uint32_t start;
    uint32_t end;
    uint32_t packets_received;
} tkproto_PacketLossPayload;

typedef struct _tkproto_PeriodicTimestampPayload { 
    pb_callback_t periodic_ts_info;
    uint32_t version;
} tkproto_PeriodicTimestampPayload;

typedef struct _tkproto_PlayTimeLeftPayload { 
    bool has_time_left;
    uint32_t time_left;
    pb_callback_t reason;
} tkproto_PlayTimeLeftPayload;

typedef struct _tkproto_ResolutionPayload { 
    uint32_t width;
    uint32_t height;
    pb_callback_t video_header;
} tkproto_ResolutionPayload;

typedef struct _tkproto_SenkushaBandwidthCommand { 
    uint32_t id;
    uint32_t time;
    bool has_bandwidth;
    uint32_t bandwidth;
    bool has_fps;
    uint32_t fps;
    bool has_mtu;
    uint32_t mtu;
    bool has_nalu_count;
    uint32_t nalu_count;
    bool has_total_sent;
    uint32_t total_sent;
    bool has_upstream;
    bool upstream;
    bool has_loss;
    double loss;
} tkproto_SenkushaBandwidthCommand;

typedef struct _tkproto_SenkushaClientMtuCommand { 
    uint32_t id;
    uint32_t mtu_req;
    bool state;
    bool has_mtu_down;
    uint32_t mtu_down;
} tkproto_SenkushaClientMtuCommand;

typedef struct _tkproto_SenkushaEchoCommand { 
    bool state;
} tkproto_SenkushaEchoCommand;

typedef struct _tkproto_SenkushaMtuCommand { 
    uint32_t id;
    uint32_t mtu_req;
    bool has_mtu_sent;
    uint32_t mtu_sent;
    bool has_num;
    uint32_t num;
    bool has_send_delay;
    uint32_t send_delay;
    bool has_delta;
    uint32_t delta;
} tkproto_SenkushaMtuCommand;

typedef struct _tkproto_ServerSettingsPayload { 
    bool has_idr_period;
    uint32_t idr_period;
    bool has_send_periodic_timestamp;
    bool send_periodic_timestamp;
} tkproto_ServerSettingsPayload;

typedef struct _tkproto_StreamInfoPayload { 
    pb_callback_t resolution;
    pb_callback_t audio_header;
    bool has_start_timeout;
    uint32_t start_timeout;
    bool has_afk_timeout;
    uint32_t afk_timeout;
    bool has_afk_timeout_disconnect;
    uint32_t afk_timeout_disconnect;
    bool has_congestion_control_interval;
    uint32_t congestion_control_interval;
    pb_callback_t audio_channel;
} tkproto_StreamInfoPayload;

typedef struct _tkproto_TakionProtocolRequestAckPayload { 
    bool has_takion_protocol_version;
    uint32_t takion_protocol_version;
} tkproto_TakionProtocolRequestAckPayload;

typedef struct _tkproto_TimerPayload { 
    uint32_t seconds_left;
    uint32_t total_seconds;
} tkproto_TimerPayload;

typedef struct _tkproto_VideoCapturePayload { 
    bool has_server_side;
    bool server_side;
    bool has_idr_period;
    uint32_t idr_period;
} tkproto_VideoCapturePayload;

typedef struct _tkproto_XmbCommandPayload { 
    tkproto_XmbCommandPayload_XmbCommand command;
    bool has_player_id;
    uint32_t player_id;
} tkproto_XmbCommandPayload;

typedef struct _tkproto_DebugOption { 
    tkproto_DebugOption_Type type;
    bool has_overlay;
    tkproto_OverlayPayload overlay;
    bool has_bitrate;
    tkproto_BitratePayload bitrate;
} tkproto_DebugOption;

typedef struct _tkproto_SenkushaPayload { 
    tkproto_SenkushaPayload_Command command;
    bool has_echo_command;
    tkproto_SenkushaEchoCommand echo_command;
    bool has_mtu_command;
    tkproto_SenkushaMtuCommand mtu_command;
    bool has_bandwidth_command;
    tkproto_SenkushaBandwidthCommand bandwidth_command;
    bool has_client_mtu_command;
    tkproto_SenkushaClientMtuCommand client_mtu_command;
} tkproto_SenkushaPayload;

typedef struct _tkproto_TakionMessage { 
    tkproto_TakionMessage_PayloadType type;
    bool has_big_payload;
    tkproto_BigPayload big_payload;
    bool has_bang_payload;
    tkproto_BangPayload bang_payload;
    bool has_info_payload;
    tkproto_InfoPayload info_payload;
    bool has_loss_payload;
    tkproto_PacketLossPayload loss_payload;
    bool has_corrupt_payload;
    tkproto_CorruptFramePayload corrupt_payload;
    bool has_cursor_payload;
    tkproto_CursorPayload cursor_payload;
    bool has_timer_payload;
    tkproto_TimerPayload timer_payload;
    bool has_disconnect_payload;
    tkproto_DisconnectPayload disconnect_payload;
    bool has_log_payload;
    tkproto_LogPayload log_payload;
    bool has_header_payload;
    tkproto_HeaderRequestPayload header_payload;
    bool has_debug_payload;
    tkproto_DebugOption debug_payload;
    bool has_senkusha_payload;
    tkproto_SenkushaPayload senkusha_payload;
    bool has_stream_info_payload;
    tkproto_StreamInfoPayload stream_info_payload;
    bool has_xmb_command_payload;
    tkproto_XmbCommandPayload xmb_command_payload;
    bool has_connection_quality_payload;
    tkproto_ConnectionQualityPayload connection_quality_payload;
    bool has_client_metric_payload;
    tkproto_ClientMetricPayload client_metric_payload;
    bool has_play_time_left_payload;
    tkproto_PlayTimeLeftPayload play_time_left_payload;
    bool has_server_message_payload;
    tkproto_ServerMessagePayload server_message_payload;
    bool has_fps_change_payload;
    tkproto_FpsChangePayload fps_change_payload;
    bool has_controller_connection_payload;
    tkproto_ControllerConnectionPayload controller_connection_payload;
    bool has_client_info_payload;
    tkproto_ClientInfoPayload client_info_payload;
    bool has_video_capture_payload;
    tkproto_VideoCapturePayload video_capture_payload;
    bool has_audio_capture_payload;
    tkproto_AudioCapturePayload audio_capture_payload;
    bool has_gk_trace_payload;
    tkproto_GkTracePayload gk_trace_payload;
    bool has_periodic_timestamp_payload;
    tkproto_PeriodicTimestampPayload periodic_timestamp_payload;
    bool has_server_settings_payload;
    tkproto_ServerSettingsPayload server_settings_payload;
    bool has_direct_message_payload;
    tkproto_DirectMessagePayload direct_message_payload;
    bool has_mic_connection_payload;
    tkproto_MicConnectionPayload mic_connection_payload;
    bool has_takion_protocol_request;
    tkproto_TakionProtocolRequestPayload takion_protocol_request;
    bool has_takion_protocol_request_ack;
    tkproto_TakionProtocolRequestAckPayload takion_protocol_request_ack;
} tkproto_TakionMessage;


/* Helper constants for enums */
#define _tkproto_TakionMessage_PayloadType_MIN tkproto_TakionMessage_PayloadType_BIG
#define _tkproto_TakionMessage_PayloadType_MAX tkproto_TakionMessage_PayloadType_TAKIONPROTOCOLREQUESTACK
#define _tkproto_TakionMessage_PayloadType_ARRAYSIZE ((tkproto_TakionMessage_PayloadType)(tkproto_TakionMessage_PayloadType_TAKIONPROTOCOLREQUESTACK+1))

#define _tkproto_LogMessage_LogLevel_MIN tkproto_LogMessage_LogLevel_CRITICAL
#define _tkproto_LogMessage_LogLevel_MAX tkproto_LogMessage_LogLevel_TRACE
#define _tkproto_LogMessage_LogLevel_ARRAYSIZE ((tkproto_LogMessage_LogLevel)(tkproto_LogMessage_LogLevel_TRACE+1))

#define _tkproto_ClientMetric_Category_MIN tkproto_ClientMetric_Category_VIDEO_FRAMELIFETIME
#define _tkproto_ClientMetric_Category_MAX tkproto_ClientMetric_Category_AUDIO_RENDER
#define _tkproto_ClientMetric_Category_ARRAYSIZE ((tkproto_ClientMetric_Category)(tkproto_ClientMetric_Category_AUDIO_RENDER+1))

#define _tkproto_HeaderRequestPayload_HeaderType_MIN tkproto_HeaderRequestPayload_HeaderType_AUDIO
#define _tkproto_HeaderRequestPayload_HeaderType_MAX tkproto_HeaderRequestPayload_HeaderType_VIDEO
#define _tkproto_HeaderRequestPayload_HeaderType_ARRAYSIZE ((tkproto_HeaderRequestPayload_HeaderType)(tkproto_HeaderRequestPayload_HeaderType_VIDEO+1))

#define _tkproto_DebugOption_Type_MIN tkproto_DebugOption_Type_OVERLAY
#define _tkproto_DebugOption_Type_MAX tkproto_DebugOption_Type_BITRATE
#define _tkproto_DebugOption_Type_ARRAYSIZE ((tkproto_DebugOption_Type)(tkproto_DebugOption_Type_BITRATE+1))

#define _tkproto_OverlayPayload_LogLocation_MIN tkproto_OverlayPayload_LogLocation_TOP_LEFT
#define _tkproto_OverlayPayload_LogLocation_MAX tkproto_OverlayPayload_LogLocation_BOTTOM_RIGHT
#define _tkproto_OverlayPayload_LogLocation_ARRAYSIZE ((tkproto_OverlayPayload_LogLocation)(tkproto_OverlayPayload_LogLocation_BOTTOM_RIGHT+1))

#define _tkproto_XmbCommandPayload_XmbCommand_MIN tkproto_XmbCommandPayload_XmbCommand_OFF
#define _tkproto_XmbCommandPayload_XmbCommand_MAX tkproto_XmbCommandPayload_XmbCommand_TOGGLE
#define _tkproto_XmbCommandPayload_XmbCommand_ARRAYSIZE ((tkproto_XmbCommandPayload_XmbCommand)(tkproto_XmbCommandPayload_XmbCommand_TOGGLE+1))

#define _tkproto_ControllerConnectionPayload_ControllerType_MIN tkproto_ControllerConnectionPayload_ControllerType_NOTSET
#define _tkproto_ControllerConnectionPayload_ControllerType_MAX tkproto_ControllerConnectionPayload_ControllerType_VR2SENSE
#define _tkproto_ControllerConnectionPayload_ControllerType_ARRAYSIZE ((tkproto_ControllerConnectionPayload_ControllerType)(tkproto_ControllerConnectionPayload_ControllerType_VR2SENSE+1))

#define _tkproto_DeepLinkPayload_DeepLinkType_MIN tkproto_DeepLinkPayload_DeepLinkType_SAVE_DATA
#define _tkproto_DeepLinkPayload_DeepLinkType_MAX tkproto_DeepLinkPayload_DeepLinkType_RAW
#define _tkproto_DeepLinkPayload_DeepLinkType_ARRAYSIZE ((tkproto_DeepLinkPayload_DeepLinkType)(tkproto_DeepLinkPayload_DeepLinkType_RAW+1))

#define _tkproto_MicInfoPayload_MicInfoType_MIN tkproto_MicInfoPayload_MicInfoType_MIC_CONNECT
#define _tkproto_MicInfoPayload_MicInfoType_MAX tkproto_MicInfoPayload_MicInfoType_MIC_MUTE
#define _tkproto_MicInfoPayload_MicInfoType_ARRAYSIZE ((tkproto_MicInfoPayload_MicInfoType)(tkproto_MicInfoPayload_MicInfoType_MIC_MUTE+1))

#define _tkproto_DirectMessagePayload_DirectMessageType_MIN tkproto_DirectMessagePayload_DirectMessageType_DEEPLINK
#define _tkproto_DirectMessagePayload_DirectMessageType_MAX tkproto_DirectMessagePayload_DirectMessageType_MICINFO
#define _tkproto_DirectMessagePayload_DirectMessageType_ARRAYSIZE ((tkproto_DirectMessagePayload_DirectMessageType)(tkproto_DirectMessagePayload_DirectMessageType_MICINFO+1))

#define _tkproto_DirectMessagePayload_Destination_MIN tkproto_DirectMessagePayload_Destination_GAIKAI_CONTROLLER
#define _tkproto_DirectMessagePayload_Destination_MAX tkproto_DirectMessagePayload_Destination_CLIENT
#define _tkproto_DirectMessagePayload_Destination_ARRAYSIZE ((tkproto_DirectMessagePayload_Destination)(tkproto_DirectMessagePayload_Destination_CLIENT+1))

#define _tkproto_SenkushaPayload_Command_MIN tkproto_SenkushaPayload_Command_ECHO_COMMAND
#define _tkproto_SenkushaPayload_Command_MAX tkproto_SenkushaPayload_Command_CLIENT_MTU_COMMAND
#define _tkproto_SenkushaPayload_Command_ARRAYSIZE ((tkproto_SenkushaPayload_Command)(tkproto_SenkushaPayload_Command_CLIENT_MTU_COMMAND+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define tkproto_TakionMessage_init_default       {_tkproto_TakionMessage_PayloadType_MIN, false, tkproto_BigPayload_init_default, false, tkproto_BangPayload_init_default, false, tkproto_InfoPayload_init_default, false, tkproto_PacketLossPayload_init_default, false, tkproto_CorruptFramePayload_init_default, false, tkproto_CursorPayload_init_default, false, tkproto_TimerPayload_init_default, false, tkproto_DisconnectPayload_init_default, false, tkproto_LogPayload_init_default, false, tkproto_HeaderRequestPayload_init_default, false, tkproto_DebugOption_init_default, false, tkproto_SenkushaPayload_init_default, false, tkproto_StreamInfoPayload_init_default, false, tkproto_XmbCommandPayload_init_default, false, tkproto_ConnectionQualityPayload_init_default, false, tkproto_ClientMetricPayload_init_default, false, tkproto_PlayTimeLeftPayload_init_default, false, tkproto_ServerMessagePayload_init_default, false, tkproto_FpsChangePayload_init_default, false, tkproto_ControllerConnectionPayload_init_default, false, tkproto_ClientInfoPayload_init_default, false, tkproto_VideoCapturePayload_init_default, false, tkproto_AudioCapturePayload_init_default, false, tkproto_GkTracePayload_init_default, false, tkproto_PeriodicTimestampPayload_init_default, false, tkproto_ServerSettingsPayload_init_default, false, tkproto_DirectMessagePayload_init_default, false, tkproto_MicConnectionPayload_init_default, false, tkproto_TakionProtocolRequestPayload_init_default, false, tkproto_TakionProtocolRequestAckPayload_init_default}
#define tkproto_EventCode_init_default           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_BigPayload_init_default          {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_BangPayload_init_default         {0, 0, 0, 0, {{NULL}, NULL}, false, tkproto_EventCode_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_InfoPayload_init_default         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define tkproto_CursorPayload_init_default       {0, 0, 0, 0, 0, {{NULL}, NULL}}
#define tkproto_TimerPayload_init_default        {0, 0}
#define tkproto_CorruptFramePayload_init_default {0, 0}
#define tkproto_PacketLossPayload_init_default   {0, 0, 0}
#define tkproto_FpsChangePayload_init_default    {0}
#define tkproto_DisconnectPayload_init_default   {{{NULL}, NULL}, false, tkproto_EventCode_init_default}
#define tkproto_LogMessage_init_default          {0, _tkproto_LogMessage_LogLevel_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define tkproto_LogPayload_init_default          {{{NULL}, NULL}}
#define tkproto_ClientMetric_init_default        {_tkproto_ClientMetric_Category_MIN, 0, 0, 0, 0, 0, 0, 0}
#define tkproto_ClientMetricPayload_init_default {{{NULL}, NULL}}
#define tkproto_HeaderRequestPayload_init_default {_tkproto_HeaderRequestPayload_HeaderType_MIN}
#define tkproto_DebugOption_init_default         {_tkproto_DebugOption_Type_MIN, false, tkproto_OverlayPayload_init_default, false, tkproto_BitratePayload_init_default}
#define tkproto_OverlayPayload_init_default      {false, 0, false, 0, false, _tkproto_OverlayPayload_LogLocation_MIN, false, 0}
#define tkproto_BitratePayload_init_default      {false, 0, false, 0}
#define tkproto_ResolutionPayload_init_default   {0, 0, {{NULL}, NULL}}
#define tkproto_AudioChannelPayload_init_default {0, {{NULL}, NULL}, false, 0}
#define tkproto_StreamInfoPayload_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define tkproto_XmbCommandPayload_init_default   {_tkproto_XmbCommandPayload_XmbCommand_MIN, false, 0}
#define tkproto_ConnectionQualityPayload_init_default {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_PlayTimeLeftPayload_init_default {false, 0, {{NULL}, NULL}}
#define tkproto_ServerMessagePayload_init_default {{{NULL}, NULL}}
#define tkproto_ControllerConnectionPayload_init_default {false, 0, false, 0, false, _tkproto_ControllerConnectionPayload_ControllerType_MIN}
#define tkproto_ClientInfoPayload_init_default   {{{NULL}, NULL}, false, 0, false, 0}
#define tkproto_VideoCapturePayload_init_default {false, false, false, 0u}
#define tkproto_AudioCapturePayload_init_default {false, false}
#define tkproto_ServerSettingsPayload_init_default {false, 0u, false, false}
#define tkproto_GkTracePayload_init_default      {0, 0, 0}
#define tkproto_PeriodicTimestampPayload_init_default {{{NULL}, NULL}, 0}
#define tkproto_DeepLinkPayload_init_default     {_tkproto_DeepLinkPayload_DeepLinkType_MIN, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}}
#define tkproto_MicInfoPayload_init_default      {_tkproto_MicInfoPayload_MicInfoType_MIN, false, 0, false, 0, false, 0, false, 0}
#define tkproto_DirectMessagePayload_init_default {_tkproto_DirectMessagePayload_DirectMessageType_MIN, _tkproto_DirectMessagePayload_Destination_MIN, {{NULL}, NULL}}
#define tkproto_MicConnectionPayload_init_default {0, 0, false, 0}
#define tkproto_TakionProtocolRequestPayload_init_default {{{NULL}, NULL}}
#define tkproto_TakionProtocolRequestAckPayload_init_default {false, 0}
#define tkproto_SenkushaPayload_init_default     {_tkproto_SenkushaPayload_Command_MIN, false, tkproto_SenkushaEchoCommand_init_default, false, tkproto_SenkushaMtuCommand_init_default, false, tkproto_SenkushaBandwidthCommand_init_default, false, tkproto_SenkushaClientMtuCommand_init_default}
#define tkproto_SenkushaEchoCommand_init_default {0}
#define tkproto_SenkushaMtuCommand_init_default  {0, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_SenkushaBandwidthCommand_init_default {0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_SenkushaClientMtuCommand_init_default {0, 0, 0, false, 0}
#define tkproto_TakionMessage_init_zero          {_tkproto_TakionMessage_PayloadType_MIN, false, tkproto_BigPayload_init_zero, false, tkproto_BangPayload_init_zero, false, tkproto_InfoPayload_init_zero, false, tkproto_PacketLossPayload_init_zero, false, tkproto_CorruptFramePayload_init_zero, false, tkproto_CursorPayload_init_zero, false, tkproto_TimerPayload_init_zero, false, tkproto_DisconnectPayload_init_zero, false, tkproto_LogPayload_init_zero, false, tkproto_HeaderRequestPayload_init_zero, false, tkproto_DebugOption_init_zero, false, tkproto_SenkushaPayload_init_zero, false, tkproto_StreamInfoPayload_init_zero, false, tkproto_XmbCommandPayload_init_zero, false, tkproto_ConnectionQualityPayload_init_zero, false, tkproto_ClientMetricPayload_init_zero, false, tkproto_PlayTimeLeftPayload_init_zero, false, tkproto_ServerMessagePayload_init_zero, false, tkproto_FpsChangePayload_init_zero, false, tkproto_ControllerConnectionPayload_init_zero, false, tkproto_ClientInfoPayload_init_zero, false, tkproto_VideoCapturePayload_init_zero, false, tkproto_AudioCapturePayload_init_zero, false, tkproto_GkTracePayload_init_zero, false, tkproto_PeriodicTimestampPayload_init_zero, false, tkproto_ServerSettingsPayload_init_zero, false, tkproto_DirectMessagePayload_init_zero, false, tkproto_MicConnectionPayload_init_zero, false, tkproto_TakionProtocolRequestPayload_init_zero, false, tkproto_TakionProtocolRequestAckPayload_init_zero}
#define tkproto_EventCode_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_BigPayload_init_zero             {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_BangPayload_init_zero            {0, 0, 0, 0, {{NULL}, NULL}, false, tkproto_EventCode_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define tkproto_InfoPayload_init_zero            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define tkproto_CursorPayload_init_zero          {0, 0, 0, 0, 0, {{NULL}, NULL}}
#define tkproto_TimerPayload_init_zero           {0, 0}
#define tkproto_CorruptFramePayload_init_zero    {0, 0}
#define tkproto_PacketLossPayload_init_zero      {0, 0, 0}
#define tkproto_FpsChangePayload_init_zero       {0}
#define tkproto_DisconnectPayload_init_zero      {{{NULL}, NULL}, false, tkproto_EventCode_init_zero}
#define tkproto_LogMessage_init_zero             {0, _tkproto_LogMessage_LogLevel_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define tkproto_LogPayload_init_zero             {{{NULL}, NULL}}
#define tkproto_ClientMetric_init_zero           {_tkproto_ClientMetric_Category_MIN, 0, 0, 0, 0, 0, 0, 0}
#define tkproto_ClientMetricPayload_init_zero    {{{NULL}, NULL}}
#define tkproto_HeaderRequestPayload_init_zero   {_tkproto_HeaderRequestPayload_HeaderType_MIN}
#define tkproto_DebugOption_init_zero            {_tkproto_DebugOption_Type_MIN, false, tkproto_OverlayPayload_init_zero, false, tkproto_BitratePayload_init_zero}
#define tkproto_OverlayPayload_init_zero         {false, 0, false, 0, false, _tkproto_OverlayPayload_LogLocation_MIN, false, 0}
#define tkproto_BitratePayload_init_zero         {false, 0, false, 0}
#define tkproto_ResolutionPayload_init_zero      {0, 0, {{NULL}, NULL}}
#define tkproto_AudioChannelPayload_init_zero    {0, {{NULL}, NULL}, false, 0}
#define tkproto_StreamInfoPayload_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define tkproto_XmbCommandPayload_init_zero      {_tkproto_XmbCommandPayload_XmbCommand_MIN, false, 0}
#define tkproto_ConnectionQualityPayload_init_zero {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_PlayTimeLeftPayload_init_zero    {false, 0, {{NULL}, NULL}}
#define tkproto_ServerMessagePayload_init_zero   {{{NULL}, NULL}}
#define tkproto_ControllerConnectionPayload_init_zero {false, 0, false, 0, false, _tkproto_ControllerConnectionPayload_ControllerType_MIN}
#define tkproto_ClientInfoPayload_init_zero      {{{NULL}, NULL}, false, 0, false, 0}
#define tkproto_VideoCapturePayload_init_zero    {false, 0, false, 0}
#define tkproto_AudioCapturePayload_init_zero    {false, 0}
#define tkproto_ServerSettingsPayload_init_zero  {false, 0, false, 0}
#define tkproto_GkTracePayload_init_zero         {0, 0, 0}
#define tkproto_PeriodicTimestampPayload_init_zero {{{NULL}, NULL}, 0}
#define tkproto_DeepLinkPayload_init_zero        {_tkproto_DeepLinkPayload_DeepLinkType_MIN, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}}
#define tkproto_MicInfoPayload_init_zero         {_tkproto_MicInfoPayload_MicInfoType_MIN, false, 0, false, 0, false, 0, false, 0}
#define tkproto_DirectMessagePayload_init_zero   {_tkproto_DirectMessagePayload_DirectMessageType_MIN, _tkproto_DirectMessagePayload_Destination_MIN, {{NULL}, NULL}}
#define tkproto_MicConnectionPayload_init_zero   {0, 0, false, 0}
#define tkproto_TakionProtocolRequestPayload_init_zero {{{NULL}, NULL}}
#define tkproto_TakionProtocolRequestAckPayload_init_zero {false, 0}
#define tkproto_SenkushaPayload_init_zero        {_tkproto_SenkushaPayload_Command_MIN, false, tkproto_SenkushaEchoCommand_init_zero, false, tkproto_SenkushaMtuCommand_init_zero, false, tkproto_SenkushaBandwidthCommand_init_zero, false, tkproto_SenkushaClientMtuCommand_init_zero}
#define tkproto_SenkushaEchoCommand_init_zero    {0}
#define tkproto_SenkushaMtuCommand_init_zero     {0, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_SenkushaBandwidthCommand_init_zero {0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define tkproto_SenkushaClientMtuCommand_init_zero {0, 0, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define tkproto_ClientMetricPayload_messages_tag 1
#define tkproto_EventCode_event_code_tag         1
#define tkproto_EventCode_name_tag               2
#define tkproto_EventCode_description_tag        3
#define tkproto_LogPayload_messages_tag          1
#define tkproto_ServerMessagePayload_payload_tag 1
#define tkproto_TakionProtocolRequestPayload_supported_takion_versions_tag 1
#define tkproto_AudioCapturePayload_server_side_tag 1
#define tkproto_AudioChannelPayload_audio_channel_type_tag 1
#define tkproto_AudioChannelPayload_audio_header_tag 2
#define tkproto_AudioChannelPayload_is_raw_pcm_tag 3
#define tkproto_BangPayload_server_version_tag   1
#define tkproto_BangPayload_token_tag            2
#define tkproto_BangPayload_encrypted_key_accepted_tag 3
#define tkproto_BangPayload_version_accepted_tag 4
#define tkproto_BangPayload_session_key_tag      5
#define tkproto_BangPayload_extended_info_tag    6
#define tkproto_BangPayload_server_version_string_tag 7
#define tkproto_BangPayload_ecdh_pub_key_tag     8
#define tkproto_BangPayload_ecdh_sig_tag         9
#define tkproto_BigPayload_client_version_tag    1
#define tkproto_BigPayload_session_key_tag       2
#define tkproto_BigPayload_launch_spec_tag       3
#define tkproto_BigPayload_encrypted_key_tag     4
#define tkproto_BigPayload_ecdh_pub_key_tag      5
#define tkproto_BigPayload_ecdh_sig_tag          6
#define tkproto_BitratePayload_toggle_tag        1
#define tkproto_BitratePayload_bitrate_change_tag 2
#define tkproto_ClientInfoPayload_session_key_tag 1
#define tkproto_ClientInfoPayload_gcm_tag_tag    2
#define tkproto_ClientInfoPayload_key_pos_tag    3
#define tkproto_ClientMetric_category_tag        1
#define tkproto_ClientMetric_start_frame_tag     2
#define tkproto_ClientMetric_end_frame_tag       3
#define tkproto_ClientMetric_count_tag           5
#define tkproto_ClientMetric_average_tag         6
#define tkproto_ClientMetric_std_dev_tag         7
#define tkproto_ClientMetric_min_val_tag         8
#define tkproto_ClientMetric_max_val_tag         9
#define tkproto_ConnectionQualityPayload_target_bitrate_tag 1
#define tkproto_ConnectionQualityPayload_upstream_bitrate_tag 2
#define tkproto_ConnectionQualityPayload_upstream_loss_tag 3
#define tkproto_ConnectionQualityPayload_disable_upstream_audio_tag 4
#define tkproto_ConnectionQualityPayload_rtt_tag 5
#define tkproto_ConnectionQualityPayload_loss_tag 6
#define tkproto_ControllerConnectionPayload_controller_id_tag 1
#define tkproto_ControllerConnectionPayload_connected_tag 2
#define tkproto_ControllerConnectionPayload_controller_type_tag 3
#define tkproto_CorruptFramePayload_start_tag    1
#define tkproto_CorruptFramePayload_end_tag      2
#define tkproto_CursorPayload_id_tag             1
#define tkproto_CursorPayload_width_tag          2
#define tkproto_CursorPayload_height_tag         3
#define tkproto_CursorPayload_hotspot_x_tag      4
#define tkproto_CursorPayload_hotspot_y_tag      5
#define tkproto_CursorPayload_pixels_tag         6
#define tkproto_DeepLinkPayload_deep_link_type_tag 1
#define tkproto_DeepLinkPayload_request_id_tag   2
#define tkproto_DeepLinkPayload_pad_unique_id_tag 3
#define tkproto_DeepLinkPayload_invitation_id_tag 4
#define tkproto_DeepLinkPayload_session_id_tag   5
#define tkproto_DeepLinkPayload_item_id_tag      6
#define tkproto_DeepLinkPayload_is_system_ui_overlaid_tag 7
#define tkproto_DeepLinkPayload_result_tag       8
#define tkproto_DeepLinkPayload_should_show_tag  9
#define tkproto_DeepLinkPayload_raw_data_tag     10
#define tkproto_DirectMessagePayload_direct_message_type_tag 1
#define tkproto_DirectMessagePayload_destination_tag 2
#define tkproto_DirectMessagePayload_data_tag    3
#define tkproto_DisconnectPayload_reason_tag     1
#define tkproto_DisconnectPayload_extended_info_tag 2
#define tkproto_FpsChangePayload_fps_tag         1
#define tkproto_GkTracePayload_seq_no_tag        1
#define tkproto_GkTracePayload_gcm_tag_tag       2
#define tkproto_GkTracePayload_key_pos_tag       3
#define tkproto_HeaderRequestPayload_type_tag    1
#define tkproto_InfoPayload_effective_bw_tag     1
#define tkproto_InfoPayload_bitrate_tag          2
#define tkproto_InfoPayload_min_bitrate_tag      3
#define tkproto_InfoPayload_target_bitrate_tag   4
#define tkproto_InfoPayload_corrupt_frame_freq_tag 5
#define tkproto_InfoPayload_mtu_tag              6
#define tkproto_InfoPayload_fps_tag              7
#define tkproto_InfoPayload_monitor_interval_tag 8
#define tkproto_InfoPayload_ext_overhead_tag     9
#define tkproto_InfoPayload_int_overhead_tag     10
#define tkproto_InfoPayload_timeout_interval_tag 11
#define tkproto_InfoPayload_min_resume_quality_tag 12
#define tkproto_InfoPayload_min_fps_tag          13
#define tkproto_LogMessage_timestamp_tag         1
#define tkproto_LogMessage_level_tag             2
#define tkproto_LogMessage_component_tag         3
#define tkproto_LogMessage_message_tag           4
#define tkproto_LogMessage_timestampdouble_tag   5
#define tkproto_MicConnectionPayload_controller_id_tag 1
#define tkproto_MicConnectionPayload_connected_tag 2
#define tkproto_MicConnectionPayload_result_tag  3
#define tkproto_MicInfoPayload_mic_info_type_tag 1
#define tkproto_MicInfoPayload_controller_id_tag 2
#define tkproto_MicInfoPayload_connected_tag     3
#define tkproto_MicInfoPayload_muted_tag         4
#define tkproto_MicInfoPayload_result_tag        5
#define tkproto_OverlayPayload_enable_tag        1
#define tkproto_OverlayPayload_toggle_tag        2
#define tkproto_OverlayPayload_location_tag      3
#define tkproto_OverlayPayload_level_tag         4
#define tkproto_PacketLossPayload_start_tag      1
#define tkproto_PacketLossPayload_end_tag        2
#define tkproto_PacketLossPayload_packets_received_tag 3
#define tkproto_PeriodicTimestampPayload_periodic_ts_info_tag 1
#define tkproto_PeriodicTimestampPayload_version_tag 2
#define tkproto_PlayTimeLeftPayload_time_left_tag 1
#define tkproto_PlayTimeLeftPayload_reason_tag   2
#define tkproto_ResolutionPayload_width_tag      1
#define tkproto_ResolutionPayload_height_tag     2
#define tkproto_ResolutionPayload_video_header_tag 3
#define tkproto_SenkushaBandwidthCommand_id_tag  1
#define tkproto_SenkushaBandwidthCommand_time_tag 2
#define tkproto_SenkushaBandwidthCommand_bandwidth_tag 3
#define tkproto_SenkushaBandwidthCommand_fps_tag 4
#define tkproto_SenkushaBandwidthCommand_mtu_tag 5
#define tkproto_SenkushaBandwidthCommand_nalu_count_tag 6
#define tkproto_SenkushaBandwidthCommand_total_sent_tag 7
#define tkproto_SenkushaBandwidthCommand_upstream_tag 8
#define tkproto_SenkushaBandwidthCommand_loss_tag 9
#define tkproto_SenkushaClientMtuCommand_id_tag  1
#define tkproto_SenkushaClientMtuCommand_mtu_req_tag 2
#define tkproto_SenkushaClientMtuCommand_state_tag 3
#define tkproto_SenkushaClientMtuCommand_mtu_down_tag 4
#define tkproto_SenkushaEchoCommand_state_tag    1
#define tkproto_SenkushaMtuCommand_id_tag        1
#define tkproto_SenkushaMtuCommand_mtu_req_tag   2
#define tkproto_SenkushaMtuCommand_mtu_sent_tag  3
#define tkproto_SenkushaMtuCommand_num_tag       4
#define tkproto_SenkushaMtuCommand_send_delay_tag 5
#define tkproto_SenkushaMtuCommand_delta_tag     6
#define tkproto_ServerSettingsPayload_idr_period_tag 1
#define tkproto_ServerSettingsPayload_send_periodic_timestamp_tag 2
#define tkproto_StreamInfoPayload_resolution_tag 1
#define tkproto_StreamInfoPayload_audio_header_tag 2
#define tkproto_StreamInfoPayload_start_timeout_tag 3
#define tkproto_StreamInfoPayload_afk_timeout_tag 4
#define tkproto_StreamInfoPayload_afk_timeout_disconnect_tag 5
#define tkproto_StreamInfoPayload_congestion_control_interval_tag 6
#define tkproto_StreamInfoPayload_audio_channel_tag 7
#define tkproto_TakionProtocolRequestAckPayload_takion_protocol_version_tag 1
#define tkproto_TimerPayload_seconds_left_tag    1
#define tkproto_TimerPayload_total_seconds_tag   2
#define tkproto_VideoCapturePayload_server_side_tag 1
#define tkproto_VideoCapturePayload_idr_period_tag 2
#define tkproto_XmbCommandPayload_command_tag    1
#define tkproto_XmbCommandPayload_player_id_tag  2
#define tkproto_DebugOption_type_tag             1
#define tkproto_DebugOption_overlay_tag          2
#define tkproto_DebugOption_bitrate_tag          3
#define tkproto_SenkushaPayload_command_tag      1
#define tkproto_SenkushaPayload_echo_command_tag 2
#define tkproto_SenkushaPayload_mtu_command_tag  3
#define tkproto_SenkushaPayload_bandwidth_command_tag 4
#define tkproto_SenkushaPayload_client_mtu_command_tag 5
#define tkproto_TakionMessage_type_tag           1
#define tkproto_TakionMessage_big_payload_tag    2
#define tkproto_TakionMessage_bang_payload_tag   3
#define tkproto_TakionMessage_info_payload_tag   4
#define tkproto_TakionMessage_loss_payload_tag   5
#define tkproto_TakionMessage_corrupt_payload_tag 6
#define tkproto_TakionMessage_cursor_payload_tag 8
#define tkproto_TakionMessage_timer_payload_tag  9
#define tkproto_TakionMessage_disconnect_payload_tag 10
#define tkproto_TakionMessage_log_payload_tag    11
#define tkproto_TakionMessage_header_payload_tag 12
#define tkproto_TakionMessage_debug_payload_tag  13
#define tkproto_TakionMessage_senkusha_payload_tag 14
#define tkproto_TakionMessage_stream_info_payload_tag 15
#define tkproto_TakionMessage_xmb_command_payload_tag 16
#define tkproto_TakionMessage_connection_quality_payload_tag 17
#define tkproto_TakionMessage_client_metric_payload_tag 18
#define tkproto_TakionMessage_play_time_left_payload_tag 19
#define tkproto_TakionMessage_server_message_payload_tag 20
#define tkproto_TakionMessage_fps_change_payload_tag 21
#define tkproto_TakionMessage_controller_connection_payload_tag 22
#define tkproto_TakionMessage_client_info_payload_tag 23
#define tkproto_TakionMessage_video_capture_payload_tag 24
#define tkproto_TakionMessage_audio_capture_payload_tag 25
#define tkproto_TakionMessage_gk_trace_payload_tag 26
#define tkproto_TakionMessage_periodic_timestamp_payload_tag 27
#define tkproto_TakionMessage_server_settings_payload_tag 28
#define tkproto_TakionMessage_direct_message_payload_tag 29
#define tkproto_TakionMessage_mic_connection_payload_tag 30
#define tkproto_TakionMessage_takion_protocol_request_tag 31
#define tkproto_TakionMessage_takion_protocol_request_ack_tag 32

/* Struct field encoding specification for nanopb */
#define tkproto_TakionMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  big_payload,       2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bang_payload,      3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  info_payload,      4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  loss_payload,      5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  corrupt_payload,   6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  cursor_payload,    8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timer_payload,     9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  disconnect_payload,  10) \
X(a, STATIC,   OPTIONAL, MESSAGE,  log_payload,      11) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header_payload,   12) \
X(a, STATIC,   OPTIONAL, MESSAGE,  debug_payload,    13) \
X(a, STATIC,   OPTIONAL, MESSAGE,  senkusha_payload,  14) \
X(a, STATIC,   OPTIONAL, MESSAGE,  stream_info_payload,  15) \
X(a, STATIC,   OPTIONAL, MESSAGE,  xmb_command_payload,  16) \
X(a, STATIC,   OPTIONAL, MESSAGE,  connection_quality_payload,  17) \
X(a, STATIC,   OPTIONAL, MESSAGE,  client_metric_payload,  18) \
X(a, STATIC,   OPTIONAL, MESSAGE,  play_time_left_payload,  19) \
X(a, STATIC,   OPTIONAL, MESSAGE,  server_message_payload,  20) \
X(a, STATIC,   OPTIONAL, MESSAGE,  fps_change_payload,  21) \
X(a, STATIC,   OPTIONAL, MESSAGE,  controller_connection_payload,  22) \
X(a, STATIC,   OPTIONAL, MESSAGE,  client_info_payload,  23) \
X(a, STATIC,   OPTIONAL, MESSAGE,  video_capture_payload,  24) \
X(a, STATIC,   OPTIONAL, MESSAGE,  audio_capture_payload,  25) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gk_trace_payload,  26) \
X(a, STATIC,   OPTIONAL, MESSAGE,  periodic_timestamp_payload,  27) \
X(a, STATIC,   OPTIONAL, MESSAGE,  server_settings_payload,  28) \
X(a, STATIC,   OPTIONAL, MESSAGE,  direct_message_payload,  29) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mic_connection_payload,  30) \
X(a, STATIC,   OPTIONAL, MESSAGE,  takion_protocol_request,  31) \
X(a, STATIC,   OPTIONAL, MESSAGE,  takion_protocol_request_ack,  32)
#define tkproto_TakionMessage_CALLBACK NULL
#define tkproto_TakionMessage_DEFAULT NULL
#define tkproto_TakionMessage_big_payload_MSGTYPE tkproto_BigPayload
#define tkproto_TakionMessage_bang_payload_MSGTYPE tkproto_BangPayload
#define tkproto_TakionMessage_info_payload_MSGTYPE tkproto_InfoPayload
#define tkproto_TakionMessage_loss_payload_MSGTYPE tkproto_PacketLossPayload
#define tkproto_TakionMessage_corrupt_payload_MSGTYPE tkproto_CorruptFramePayload
#define tkproto_TakionMessage_cursor_payload_MSGTYPE tkproto_CursorPayload
#define tkproto_TakionMessage_timer_payload_MSGTYPE tkproto_TimerPayload
#define tkproto_TakionMessage_disconnect_payload_MSGTYPE tkproto_DisconnectPayload
#define tkproto_TakionMessage_log_payload_MSGTYPE tkproto_LogPayload
#define tkproto_TakionMessage_header_payload_MSGTYPE tkproto_HeaderRequestPayload
#define tkproto_TakionMessage_debug_payload_MSGTYPE tkproto_DebugOption
#define tkproto_TakionMessage_senkusha_payload_MSGTYPE tkproto_SenkushaPayload
#define tkproto_TakionMessage_stream_info_payload_MSGTYPE tkproto_StreamInfoPayload
#define tkproto_TakionMessage_xmb_command_payload_MSGTYPE tkproto_XmbCommandPayload
#define tkproto_TakionMessage_connection_quality_payload_MSGTYPE tkproto_ConnectionQualityPayload
#define tkproto_TakionMessage_client_metric_payload_MSGTYPE tkproto_ClientMetricPayload
#define tkproto_TakionMessage_play_time_left_payload_MSGTYPE tkproto_PlayTimeLeftPayload
#define tkproto_TakionMessage_server_message_payload_MSGTYPE tkproto_ServerMessagePayload
#define tkproto_TakionMessage_fps_change_payload_MSGTYPE tkproto_FpsChangePayload
#define tkproto_TakionMessage_controller_connection_payload_MSGTYPE tkproto_ControllerConnectionPayload
#define tkproto_TakionMessage_client_info_payload_MSGTYPE tkproto_ClientInfoPayload
#define tkproto_TakionMessage_video_capture_payload_MSGTYPE tkproto_VideoCapturePayload
#define tkproto_TakionMessage_audio_capture_payload_MSGTYPE tkproto_AudioCapturePayload
#define tkproto_TakionMessage_gk_trace_payload_MSGTYPE tkproto_GkTracePayload
#define tkproto_TakionMessage_periodic_timestamp_payload_MSGTYPE tkproto_PeriodicTimestampPayload
#define tkproto_TakionMessage_server_settings_payload_MSGTYPE tkproto_ServerSettingsPayload
#define tkproto_TakionMessage_direct_message_payload_MSGTYPE tkproto_DirectMessagePayload
#define tkproto_TakionMessage_mic_connection_payload_MSGTYPE tkproto_MicConnectionPayload
#define tkproto_TakionMessage_takion_protocol_request_MSGTYPE tkproto_TakionProtocolRequestPayload
#define tkproto_TakionMessage_takion_protocol_request_ack_MSGTYPE tkproto_TakionProtocolRequestAckPayload

#define tkproto_EventCode_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   event_code,        1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, CALLBACK, OPTIONAL, STRING,   description,       3)
#define tkproto_EventCode_CALLBACK pb_default_field_callback
#define tkproto_EventCode_DEFAULT NULL

#define tkproto_BigPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   client_version,    1) \
X(a, CALLBACK, REQUIRED, STRING,   session_key,       2) \
X(a, CALLBACK, REQUIRED, STRING,   launch_spec,       3) \
X(a, CALLBACK, REQUIRED, BYTES,    encrypted_key,     4) \
X(a, CALLBACK, OPTIONAL, BYTES,    ecdh_pub_key,      5) \
X(a, CALLBACK, OPTIONAL, BYTES,    ecdh_sig,          6)
#define tkproto_BigPayload_CALLBACK pb_default_field_callback
#define tkproto_BigPayload_DEFAULT NULL

#define tkproto_BangPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   server_version,    1) \
X(a, STATIC,   REQUIRED, UINT32,   token,             2) \
X(a, STATIC,   REQUIRED, BOOL,     encrypted_key_accepted,   3) \
X(a, STATIC,   REQUIRED, BOOL,     version_accepted,   4) \
X(a, CALLBACK, REQUIRED, STRING,   session_key,       5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  extended_info,     6) \
X(a, CALLBACK, OPTIONAL, STRING,   server_version_string,   7) \
X(a, CALLBACK, OPTIONAL, BYTES,    ecdh_pub_key,      8) \
X(a, CALLBACK, OPTIONAL, BYTES,    ecdh_sig,          9)
#define tkproto_BangPayload_CALLBACK pb_default_field_callback
#define tkproto_BangPayload_DEFAULT NULL
#define tkproto_BangPayload_extended_info_MSGTYPE tkproto_EventCode

#define tkproto_InfoPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   effective_bw,      1) \
X(a, STATIC,   REQUIRED, UINT32,   bitrate,           2) \
X(a, STATIC,   REQUIRED, UINT32,   min_bitrate,       3) \
X(a, STATIC,   REQUIRED, UINT32,   target_bitrate,    4) \
X(a, STATIC,   REQUIRED, UINT32,   corrupt_frame_freq,   5) \
X(a, STATIC,   REQUIRED, UINT32,   mtu,               6) \
X(a, STATIC,   REQUIRED, UINT32,   fps,               7) \
X(a, STATIC,   REQUIRED, UINT32,   monitor_interval,   8) \
X(a, STATIC,   REQUIRED, UINT32,   ext_overhead,      9) \
X(a, STATIC,   REQUIRED, UINT32,   int_overhead,     10) \
X(a, STATIC,   REQUIRED, UINT32,   timeout_interval,  11) \
X(a, STATIC,   REQUIRED, UINT32,   min_resume_quality,  12) \
X(a, STATIC,   REQUIRED, UINT32,   min_fps,          13)
#define tkproto_InfoPayload_CALLBACK NULL
#define tkproto_InfoPayload_DEFAULT NULL

#define tkproto_CursorPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, UINT32,   width,             2) \
X(a, STATIC,   REQUIRED, UINT32,   height,            3) \
X(a, STATIC,   REQUIRED, UINT32,   hotspot_x,         4) \
X(a, STATIC,   REQUIRED, UINT32,   hotspot_y,         5) \
X(a, CALLBACK, OPTIONAL, BYTES,    pixels,            6)
#define tkproto_CursorPayload_CALLBACK pb_default_field_callback
#define tkproto_CursorPayload_DEFAULT NULL

#define tkproto_TimerPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   seconds_left,      1) \
X(a, STATIC,   REQUIRED, UINT32,   total_seconds,     2)
#define tkproto_TimerPayload_CALLBACK NULL
#define tkproto_TimerPayload_DEFAULT NULL

#define tkproto_CorruptFramePayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   start,             1) \
X(a, STATIC,   REQUIRED, UINT32,   end,               2)
#define tkproto_CorruptFramePayload_CALLBACK NULL
#define tkproto_CorruptFramePayload_DEFAULT NULL

#define tkproto_PacketLossPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   start,             1) \
X(a, STATIC,   REQUIRED, UINT32,   end,               2) \
X(a, STATIC,   REQUIRED, UINT32,   packets_received,   3)
#define tkproto_PacketLossPayload_CALLBACK NULL
#define tkproto_PacketLossPayload_DEFAULT NULL

#define tkproto_FpsChangePayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   fps,               1)
#define tkproto_FpsChangePayload_CALLBACK NULL
#define tkproto_FpsChangePayload_DEFAULT NULL

#define tkproto_DisconnectPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   reason,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  extended_info,     2)
#define tkproto_DisconnectPayload_CALLBACK pb_default_field_callback
#define tkproto_DisconnectPayload_DEFAULT NULL
#define tkproto_DisconnectPayload_extended_info_MSGTYPE tkproto_EventCode

#define tkproto_LogMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    timestamp,         1) \
X(a, STATIC,   REQUIRED, UENUM,    level,             2) \
X(a, CALLBACK, REQUIRED, STRING,   component,         3) \
X(a, CALLBACK, REQUIRED, STRING,   message,           4) \
X(a, STATIC,   OPTIONAL, DOUBLE,   timestampdouble,   5)
#define tkproto_LogMessage_CALLBACK pb_default_field_callback
#define tkproto_LogMessage_DEFAULT NULL

#define tkproto_LogPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  messages,          1)
#define tkproto_LogPayload_CALLBACK pb_default_field_callback
#define tkproto_LogPayload_DEFAULT NULL
#define tkproto_LogPayload_messages_MSGTYPE tkproto_LogMessage

#define tkproto_ClientMetric_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    category,          1) \
X(a, STATIC,   REQUIRED, INT32,    start_frame,       2) \
X(a, STATIC,   REQUIRED, INT32,    end_frame,         3) \
X(a, STATIC,   REQUIRED, INT32,    count,             5) \
X(a, STATIC,   REQUIRED, FLOAT,    average,           6) \
X(a, STATIC,   REQUIRED, FLOAT,    std_dev,           7) \
X(a, STATIC,   REQUIRED, FLOAT,    min_val,           8) \
X(a, STATIC,   REQUIRED, FLOAT,    max_val,           9)
#define tkproto_ClientMetric_CALLBACK NULL
#define tkproto_ClientMetric_DEFAULT NULL

#define tkproto_ClientMetricPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  messages,          1)
#define tkproto_ClientMetricPayload_CALLBACK pb_default_field_callback
#define tkproto_ClientMetricPayload_DEFAULT NULL
#define tkproto_ClientMetricPayload_messages_MSGTYPE tkproto_ClientMetric

#define tkproto_HeaderRequestPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1)
#define tkproto_HeaderRequestPayload_CALLBACK NULL
#define tkproto_HeaderRequestPayload_DEFAULT NULL

#define tkproto_DebugOption_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  overlay,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bitrate,           3)
#define tkproto_DebugOption_CALLBACK NULL
#define tkproto_DebugOption_DEFAULT NULL
#define tkproto_DebugOption_overlay_MSGTYPE tkproto_OverlayPayload
#define tkproto_DebugOption_bitrate_MSGTYPE tkproto_BitratePayload

#define tkproto_OverlayPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     enable,            1) \
X(a, STATIC,   OPTIONAL, BOOL,     toggle,            2) \
X(a, STATIC,   OPTIONAL, UENUM,    location,          3) \
X(a, STATIC,   OPTIONAL, UINT32,   level,             4)
#define tkproto_OverlayPayload_CALLBACK NULL
#define tkproto_OverlayPayload_DEFAULT NULL

#define tkproto_BitratePayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     toggle,            1) \
X(a, STATIC,   OPTIONAL, FLOAT,    bitrate_change,    2)
#define tkproto_BitratePayload_CALLBACK NULL
#define tkproto_BitratePayload_DEFAULT NULL

#define tkproto_ResolutionPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   width,             1) \
X(a, STATIC,   REQUIRED, UINT32,   height,            2) \
X(a, CALLBACK, REQUIRED, BYTES,    video_header,      3)
#define tkproto_ResolutionPayload_CALLBACK pb_default_field_callback
#define tkproto_ResolutionPayload_DEFAULT NULL

#define tkproto_AudioChannelPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   audio_channel_type,   1) \
X(a, CALLBACK, REQUIRED, BYTES,    audio_header,      2) \
X(a, STATIC,   OPTIONAL, BOOL,     is_raw_pcm,        3)
#define tkproto_AudioChannelPayload_CALLBACK pb_default_field_callback
#define tkproto_AudioChannelPayload_DEFAULT NULL

#define tkproto_StreamInfoPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  resolution,        1) \
X(a, CALLBACK, REQUIRED, BYTES,    audio_header,      2) \
X(a, STATIC,   OPTIONAL, UINT32,   start_timeout,     3) \
X(a, STATIC,   OPTIONAL, UINT32,   afk_timeout,       4) \
X(a, STATIC,   OPTIONAL, UINT32,   afk_timeout_disconnect,   5) \
X(a, STATIC,   OPTIONAL, UINT32,   congestion_control_interval,   6) \
X(a, CALLBACK, REPEATED, MESSAGE,  audio_channel,     7)
#define tkproto_StreamInfoPayload_CALLBACK pb_default_field_callback
#define tkproto_StreamInfoPayload_DEFAULT NULL
#define tkproto_StreamInfoPayload_resolution_MSGTYPE tkproto_ResolutionPayload
#define tkproto_StreamInfoPayload_audio_channel_MSGTYPE tkproto_AudioChannelPayload

#define tkproto_XmbCommandPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    command,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   player_id,         2)
#define tkproto_XmbCommandPayload_CALLBACK NULL
#define tkproto_XmbCommandPayload_DEFAULT NULL

#define tkproto_ConnectionQualityPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   target_bitrate,    1) \
X(a, STATIC,   OPTIONAL, UINT32,   upstream_bitrate,   2) \
X(a, STATIC,   OPTIONAL, FLOAT,    upstream_loss,     3) \
X(a, STATIC,   OPTIONAL, BOOL,     disable_upstream_audio,   4) \
X(a, STATIC,   OPTIONAL, DOUBLE,   rtt,               5) \
X(a, STATIC,   OPTIONAL, UINT64,   loss,              6)
#define tkproto_ConnectionQualityPayload_CALLBACK NULL
#define tkproto_ConnectionQualityPayload_DEFAULT NULL

#define tkproto_PlayTimeLeftPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   time_left,         1) \
X(a, CALLBACK, OPTIONAL, STRING,   reason,            2)
#define tkproto_PlayTimeLeftPayload_CALLBACK pb_default_field_callback
#define tkproto_PlayTimeLeftPayload_DEFAULT NULL

#define tkproto_ServerMessagePayload_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   payload,           1)
#define tkproto_ServerMessagePayload_CALLBACK pb_default_field_callback
#define tkproto_ServerMessagePayload_DEFAULT NULL

#define tkproto_ControllerConnectionPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    controller_id,     1) \
X(a, STATIC,   OPTIONAL, BOOL,     connected,         2) \
X(a, STATIC,   OPTIONAL, UENUM,    controller_type,   3)
#define tkproto_ControllerConnectionPayload_CALLBACK NULL
#define tkproto_ControllerConnectionPayload_DEFAULT NULL

#define tkproto_ClientInfoPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   session_key,       1) \
X(a, STATIC,   OPTIONAL, UINT32,   gcm_tag,           2) \
X(a, STATIC,   OPTIONAL, UINT32,   key_pos,           3)
#define tkproto_ClientInfoPayload_CALLBACK pb_default_field_callback
#define tkproto_ClientInfoPayload_DEFAULT NULL

#define tkproto_VideoCapturePayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     server_side,       1) \
X(a, STATIC,   OPTIONAL, UINT32,   idr_period,        2)
#define tkproto_VideoCapturePayload_CALLBACK NULL
#define tkproto_VideoCapturePayload_DEFAULT (const pb_byte_t*)"\x08\x00\x10\x00\x00"

#define tkproto_AudioCapturePayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     server_side,       1)
#define tkproto_AudioCapturePayload_CALLBACK NULL
#define tkproto_AudioCapturePayload_DEFAULT (const pb_byte_t*)"\x08\x00\x00"

#define tkproto_ServerSettingsPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   idr_period,        1) \
X(a, STATIC,   OPTIONAL, BOOL,     send_periodic_timestamp,   2)
#define tkproto_ServerSettingsPayload_CALLBACK NULL
#define tkproto_ServerSettingsPayload_DEFAULT (const pb_byte_t*)"\x08\x00\x10\x00\x00"

#define tkproto_GkTracePayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   seq_no,            1) \
X(a, STATIC,   REQUIRED, UINT32,   gcm_tag,           2) \
X(a, STATIC,   REQUIRED, UINT32,   key_pos,           3)
#define tkproto_GkTracePayload_CALLBACK NULL
#define tkproto_GkTracePayload_DEFAULT NULL

#define tkproto_PeriodicTimestampPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, BYTES,    periodic_ts_info,   1) \
X(a, STATIC,   REQUIRED, UINT32,   version,           2)
#define tkproto_PeriodicTimestampPayload_CALLBACK pb_default_field_callback
#define tkproto_PeriodicTimestampPayload_DEFAULT NULL

#define tkproto_DeepLinkPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    deep_link_type,    1) \
X(a, STATIC,   OPTIONAL, UINT32,   request_id,        2) \
X(a, STATIC,   OPTIONAL, UINT32,   pad_unique_id,     3) \
X(a, CALLBACK, OPTIONAL, STRING,   invitation_id,     4) \
X(a, CALLBACK, OPTIONAL, STRING,   session_id,        5) \
X(a, CALLBACK, OPTIONAL, STRING,   item_id,           6) \
X(a, CALLBACK, OPTIONAL, STRING,   is_system_ui_overlaid,   7) \
X(a, STATIC,   OPTIONAL, UINT32,   result,            8) \
X(a, STATIC,   OPTIONAL, BOOL,     should_show,       9) \
X(a, CALLBACK, OPTIONAL, STRING,   raw_data,         10)
#define tkproto_DeepLinkPayload_CALLBACK pb_default_field_callback
#define tkproto_DeepLinkPayload_DEFAULT NULL

#define tkproto_MicInfoPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    mic_info_type,     1) \
X(a, STATIC,   OPTIONAL, UINT32,   controller_id,     2) \
X(a, STATIC,   OPTIONAL, BOOL,     connected,         3) \
X(a, STATIC,   OPTIONAL, BOOL,     muted,             4) \
X(a, STATIC,   OPTIONAL, BOOL,     result,            5)
#define tkproto_MicInfoPayload_CALLBACK NULL
#define tkproto_MicInfoPayload_DEFAULT NULL

#define tkproto_DirectMessagePayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    direct_message_type,   1) \
X(a, STATIC,   REQUIRED, UENUM,    destination,       2) \
X(a, CALLBACK, OPTIONAL, BYTES,    data,              3)
#define tkproto_DirectMessagePayload_CALLBACK pb_default_field_callback
#define tkproto_DirectMessagePayload_DEFAULT (const pb_byte_t*)"\x10\xe8\x07\x00"

#define tkproto_MicConnectionPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    controller_id,     1) \
X(a, STATIC,   REQUIRED, BOOL,     connected,         2) \
X(a, STATIC,   OPTIONAL, BOOL,     result,            3)
#define tkproto_MicConnectionPayload_CALLBACK NULL
#define tkproto_MicConnectionPayload_DEFAULT NULL

#define tkproto_TakionProtocolRequestPayload_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32,   supported_takion_versions,   1)
#define tkproto_TakionProtocolRequestPayload_CALLBACK pb_default_field_callback
#define tkproto_TakionProtocolRequestPayload_DEFAULT NULL

#define tkproto_TakionProtocolRequestAckPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   takion_protocol_version,   1)
#define tkproto_TakionProtocolRequestAckPayload_CALLBACK NULL
#define tkproto_TakionProtocolRequestAckPayload_DEFAULT NULL

#define tkproto_SenkushaPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    command,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  echo_command,      2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mtu_command,       3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bandwidth_command,   4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  client_mtu_command,   5)
#define tkproto_SenkushaPayload_CALLBACK NULL
#define tkproto_SenkushaPayload_DEFAULT NULL
#define tkproto_SenkushaPayload_echo_command_MSGTYPE tkproto_SenkushaEchoCommand
#define tkproto_SenkushaPayload_mtu_command_MSGTYPE tkproto_SenkushaMtuCommand
#define tkproto_SenkushaPayload_bandwidth_command_MSGTYPE tkproto_SenkushaBandwidthCommand
#define tkproto_SenkushaPayload_client_mtu_command_MSGTYPE tkproto_SenkushaClientMtuCommand

#define tkproto_SenkushaEchoCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     state,             1)
#define tkproto_SenkushaEchoCommand_CALLBACK NULL
#define tkproto_SenkushaEchoCommand_DEFAULT NULL

#define tkproto_SenkushaMtuCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, UINT32,   mtu_req,           2) \
X(a, STATIC,   OPTIONAL, UINT32,   mtu_sent,          3) \
X(a, STATIC,   OPTIONAL, UINT32,   num,               4) \
X(a, STATIC,   OPTIONAL, UINT32,   send_delay,        5) \
X(a, STATIC,   OPTIONAL, UINT32,   delta,             6)
#define tkproto_SenkushaMtuCommand_CALLBACK NULL
#define tkproto_SenkushaMtuCommand_DEFAULT NULL

#define tkproto_SenkushaBandwidthCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, UINT32,   time,              2) \
X(a, STATIC,   OPTIONAL, UINT32,   bandwidth,         3) \
X(a, STATIC,   OPTIONAL, UINT32,   fps,               4) \
X(a, STATIC,   OPTIONAL, UINT32,   mtu,               5) \
X(a, STATIC,   OPTIONAL, UINT32,   nalu_count,        6) \
X(a, STATIC,   OPTIONAL, UINT32,   total_sent,        7) \
X(a, STATIC,   OPTIONAL, BOOL,     upstream,          8) \
X(a, STATIC,   OPTIONAL, DOUBLE,   loss,              9)
#define tkproto_SenkushaBandwidthCommand_CALLBACK NULL
#define tkproto_SenkushaBandwidthCommand_DEFAULT NULL

#define tkproto_SenkushaClientMtuCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   REQUIRED, UINT32,   mtu_req,           2) \
X(a, STATIC,   REQUIRED, BOOL,     state,             3) \
X(a, STATIC,   OPTIONAL, UINT32,   mtu_down,          4)
#define tkproto_SenkushaClientMtuCommand_CALLBACK NULL
#define tkproto_SenkushaClientMtuCommand_DEFAULT NULL

extern const pb_msgdesc_t tkproto_TakionMessage_msg;
extern const pb_msgdesc_t tkproto_EventCode_msg;
extern const pb_msgdesc_t tkproto_BigPayload_msg;
extern const pb_msgdesc_t tkproto_BangPayload_msg;
extern const pb_msgdesc_t tkproto_InfoPayload_msg;
extern const pb_msgdesc_t tkproto_CursorPayload_msg;
extern const pb_msgdesc_t tkproto_TimerPayload_msg;
extern const pb_msgdesc_t tkproto_CorruptFramePayload_msg;
extern const pb_msgdesc_t tkproto_PacketLossPayload_msg;
extern const pb_msgdesc_t tkproto_FpsChangePayload_msg;
extern const pb_msgdesc_t tkproto_DisconnectPayload_msg;
extern const pb_msgdesc_t tkproto_LogMessage_msg;
extern const pb_msgdesc_t tkproto_LogPayload_msg;
extern const pb_msgdesc_t tkproto_ClientMetric_msg;
extern const pb_msgdesc_t tkproto_ClientMetricPayload_msg;
extern const pb_msgdesc_t tkproto_HeaderRequestPayload_msg;
extern const pb_msgdesc_t tkproto_DebugOption_msg;
extern const pb_msgdesc_t tkproto_OverlayPayload_msg;
extern const pb_msgdesc_t tkproto_BitratePayload_msg;
extern const pb_msgdesc_t tkproto_ResolutionPayload_msg;
extern const pb_msgdesc_t tkproto_AudioChannelPayload_msg;
extern const pb_msgdesc_t tkproto_StreamInfoPayload_msg;
extern const pb_msgdesc_t tkproto_XmbCommandPayload_msg;
extern const pb_msgdesc_t tkproto_ConnectionQualityPayload_msg;
extern const pb_msgdesc_t tkproto_PlayTimeLeftPayload_msg;
extern const pb_msgdesc_t tkproto_ServerMessagePayload_msg;
extern const pb_msgdesc_t tkproto_ControllerConnectionPayload_msg;
extern const pb_msgdesc_t tkproto_ClientInfoPayload_msg;
extern const pb_msgdesc_t tkproto_VideoCapturePayload_msg;
extern const pb_msgdesc_t tkproto_AudioCapturePayload_msg;
extern const pb_msgdesc_t tkproto_ServerSettingsPayload_msg;
extern const pb_msgdesc_t tkproto_GkTracePayload_msg;
extern const pb_msgdesc_t tkproto_PeriodicTimestampPayload_msg;
extern const pb_msgdesc_t tkproto_DeepLinkPayload_msg;
extern const pb_msgdesc_t tkproto_MicInfoPayload_msg;
extern const pb_msgdesc_t tkproto_DirectMessagePayload_msg;
extern const pb_msgdesc_t tkproto_MicConnectionPayload_msg;
extern const pb_msgdesc_t tkproto_TakionProtocolRequestPayload_msg;
extern const pb_msgdesc_t tkproto_TakionProtocolRequestAckPayload_msg;
extern const pb_msgdesc_t tkproto_SenkushaPayload_msg;
extern const pb_msgdesc_t tkproto_SenkushaEchoCommand_msg;
extern const pb_msgdesc_t tkproto_SenkushaMtuCommand_msg;
extern const pb_msgdesc_t tkproto_SenkushaBandwidthCommand_msg;
extern const pb_msgdesc_t tkproto_SenkushaClientMtuCommand_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define tkproto_TakionMessage_fields &tkproto_TakionMessage_msg
#define tkproto_EventCode_fields &tkproto_EventCode_msg
#define tkproto_BigPayload_fields &tkproto_BigPayload_msg
#define tkproto_BangPayload_fields &tkproto_BangPayload_msg
#define tkproto_InfoPayload_fields &tkproto_InfoPayload_msg
#define tkproto_CursorPayload_fields &tkproto_CursorPayload_msg
#define tkproto_TimerPayload_fields &tkproto_TimerPayload_msg
#define tkproto_CorruptFramePayload_fields &tkproto_CorruptFramePayload_msg
#define tkproto_PacketLossPayload_fields &tkproto_PacketLossPayload_msg
#define tkproto_FpsChangePayload_fields &tkproto_FpsChangePayload_msg
#define tkproto_DisconnectPayload_fields &tkproto_DisconnectPayload_msg
#define tkproto_LogMessage_fields &tkproto_LogMessage_msg
#define tkproto_LogPayload_fields &tkproto_LogPayload_msg
#define tkproto_ClientMetric_fields &tkproto_ClientMetric_msg
#define tkproto_ClientMetricPayload_fields &tkproto_ClientMetricPayload_msg
#define tkproto_HeaderRequestPayload_fields &tkproto_HeaderRequestPayload_msg
#define tkproto_DebugOption_fields &tkproto_DebugOption_msg
#define tkproto_OverlayPayload_fields &tkproto_OverlayPayload_msg
#define tkproto_BitratePayload_fields &tkproto_BitratePayload_msg
#define tkproto_ResolutionPayload_fields &tkproto_ResolutionPayload_msg
#define tkproto_AudioChannelPayload_fields &tkproto_AudioChannelPayload_msg
#define tkproto_StreamInfoPayload_fields &tkproto_StreamInfoPayload_msg
#define tkproto_XmbCommandPayload_fields &tkproto_XmbCommandPayload_msg
#define tkproto_ConnectionQualityPayload_fields &tkproto_ConnectionQualityPayload_msg
#define tkproto_PlayTimeLeftPayload_fields &tkproto_PlayTimeLeftPayload_msg
#define tkproto_ServerMessagePayload_fields &tkproto_ServerMessagePayload_msg
#define tkproto_ControllerConnectionPayload_fields &tkproto_ControllerConnectionPayload_msg
#define tkproto_ClientInfoPayload_fields &tkproto_ClientInfoPayload_msg
#define tkproto_VideoCapturePayload_fields &tkproto_VideoCapturePayload_msg
#define tkproto_AudioCapturePayload_fields &tkproto_AudioCapturePayload_msg
#define tkproto_ServerSettingsPayload_fields &tkproto_ServerSettingsPayload_msg
#define tkproto_GkTracePayload_fields &tkproto_GkTracePayload_msg
#define tkproto_PeriodicTimestampPayload_fields &tkproto_PeriodicTimestampPayload_msg
#define tkproto_DeepLinkPayload_fields &tkproto_DeepLinkPayload_msg
#define tkproto_MicInfoPayload_fields &tkproto_MicInfoPayload_msg
#define tkproto_DirectMessagePayload_fields &tkproto_DirectMessagePayload_msg
#define tkproto_MicConnectionPayload_fields &tkproto_MicConnectionPayload_msg
#define tkproto_TakionProtocolRequestPayload_fields &tkproto_TakionProtocolRequestPayload_msg
#define tkproto_TakionProtocolRequestAckPayload_fields &tkproto_TakionProtocolRequestAckPayload_msg
#define tkproto_SenkushaPayload_fields &tkproto_SenkushaPayload_msg
#define tkproto_SenkushaEchoCommand_fields &tkproto_SenkushaEchoCommand_msg
#define tkproto_SenkushaMtuCommand_fields &tkproto_SenkushaMtuCommand_msg
#define tkproto_SenkushaBandwidthCommand_fields &tkproto_SenkushaBandwidthCommand_msg
#define tkproto_SenkushaClientMtuCommand_fields &tkproto_SenkushaClientMtuCommand_msg

/* Maximum encoded size of messages (where known) */
/* tkproto_TakionMessage_size depends on runtime parameters */
/* tkproto_EventCode_size depends on runtime parameters */
/* tkproto_BigPayload_size depends on runtime parameters */
/* tkproto_BangPayload_size depends on runtime parameters */
/* tkproto_CursorPayload_size depends on runtime parameters */
/* tkproto_DisconnectPayload_size depends on runtime parameters */
/* tkproto_LogMessage_size depends on runtime parameters */
/* tkproto_LogPayload_size depends on runtime parameters */
/* tkproto_ClientMetricPayload_size depends on runtime parameters */
/* tkproto_ResolutionPayload_size depends on runtime parameters */
/* tkproto_AudioChannelPayload_size depends on runtime parameters */
/* tkproto_StreamInfoPayload_size depends on runtime parameters */
/* tkproto_PlayTimeLeftPayload_size depends on runtime parameters */
/* tkproto_ServerMessagePayload_size depends on runtime parameters */
/* tkproto_ClientInfoPayload_size depends on runtime parameters */
/* tkproto_PeriodicTimestampPayload_size depends on runtime parameters */
/* tkproto_DeepLinkPayload_size depends on runtime parameters */
/* tkproto_DirectMessagePayload_size depends on runtime parameters */
/* tkproto_TakionProtocolRequestPayload_size depends on runtime parameters */
#define tkproto_AudioCapturePayload_size         2
#define tkproto_BitratePayload_size              7
#define tkproto_ClientMetric_size                55
#define tkproto_ConnectionQualityPayload_size    39
#define tkproto_ControllerConnectionPayload_size 15
#define tkproto_CorruptFramePayload_size         12
#define tkproto_DebugOption_size                 25
#define tkproto_FpsChangePayload_size            6
#define tkproto_GkTracePayload_size              18
#define tkproto_HeaderRequestPayload_size        2
#define tkproto_InfoPayload_size                 78
#define tkproto_MicConnectionPayload_size        15
#define tkproto_MicInfoPayload_size              14
#define tkproto_OverlayPayload_size              12
#define tkproto_PacketLossPayload_size           18
#define tkproto_SenkushaBandwidthCommand_size    53
#define tkproto_SenkushaClientMtuCommand_size    20
#define tkproto_SenkushaEchoCommand_size         2
#define tkproto_SenkushaMtuCommand_size          36
#define tkproto_SenkushaPayload_size             121
#define tkproto_ServerSettingsPayload_size       8
#define tkproto_TakionProtocolRequestAckPayload_size 6
#define tkproto_TimerPayload_size                12
#define tkproto_VideoCapturePayload_size         8
#define tkproto_XmbCommandPayload_size           8

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
